{
  "openapi": "3.0.1",
  "info": {
    "title": "Kambrium MCP Server API",
    "version": "1.0.0",
    "description": "JSON-RPC 2.0 API for MCP (Model Context Protocol) server interaction and management. All MCP communication uses JSON-RPC 2.0 over HTTP with a single endpoint per tenant."
  },
  "servers": [
    {
      "url": "https://api.kambrium.com"
    }
  ],
  "security": [
    {
      "OAuth2": [
        "mcp.read",
        "mcp.write",
        "mcp.tools.execute",
        "mcp.resources.read"
      ]
    },
    {
      "PAT": []
    }
  ],
  "paths": {
    "/api/v1/mcp-servers/available": {
      "get": {
        "summary": "Get Available MCP Servers",
        "description": "Retrieve all available MCP server types that can be instantiated.",
        "operationId": "getAvailableMcpServers",
        "responses": {
          "200": {
            "description": "List of available MCP servers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Available MCP servers retrieved successfully"
                    },
                    "mcp_servers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AvailableMcpServer"
                      }
                    },
                    "total_count": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mcp-servers": {
      "post": {
        "summary": "Create MCP Server Instance",
        "description": "Create a new MCP server connection instance.",
        "operationId": "createMcpServerInstance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMcpConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "MCP server connection created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "MCP server connection created successfully"
                    },
                    "connection": {
                      "$ref": "#/components/schemas/McpConnection"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mcp-servers/{server_id}": {
      "get": {
        "summary": "Get MCP Server Instance",
        "description": "Get details of an MCP server connection instance.",
        "operationId": "getMcpServerInstance",
        "parameters": [
          {
            "name": "server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "srv_123abc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MCP server connection details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Connection retrieved successfully"
                    },
                    "connection": {
                      "$ref": "#/components/schemas/McpConnection"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update MCP Server Instance",
        "description": "Update an existing MCP server connection instance.",
        "operationId": "updateMcpServerInstance",
        "parameters": [
          {
            "name": "server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "srv_123abc"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMcpConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MCP server connection updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Connection updated successfully"
                    },
                    "connection": {
                      "$ref": "#/components/schemas/McpConnection"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete MCP Server Instance",
        "description": "Delete an MCP server connection instance.",
        "operationId": "deleteMcpServerInstance",
        "parameters": [
          {
            "name": "server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "srv_123abc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MCP server connection deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Connection deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mcp-servers/{server_type}/tools": {
      "get": {
        "summary": "Get MCP Server Tools",
        "description": "Get available tools for a specific MCP server type.",
        "operationId": "getMcpServerTools",
        "parameters": [
          {
            "name": "server_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pipedrive"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tools for the MCP server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tools retrieved successfully"
                    },
                    "tools": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/McpTool"
                      }
                    },
                    "has_more": {
                      "type": "boolean"
                    },
                    "total_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mcp-servers/connections": {
      "post": {
        "summary": "Create MCP Server Instance",
        "description": "Create a new MCP server connection instance.",
        "operationId": "createMcpConnection",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMcpConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "MCP server connection created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "MCP server connection created successfully"
                    },
                    "connection": {
                      "$ref": "#/components/schemas/McpConnection"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get MCP Server Instance",
        "description": "Get details of an MCP server connection instance.",
        "operationId": "getMcpConnection",
        "parameters": [
          {
            "name": "connection_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "conn_123abc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MCP server connection details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Connection retrieved successfully"
                    },
                    "connection": {
                      "$ref": "#/components/schemas/McpConnection"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update MCP Server Instance",
        "description": "Update an existing MCP server connection instance.",
        "operationId": "updateMcpConnection",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMcpConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MCP server connection updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Connection updated successfully"
                    },
                    "connection": {
                      "$ref": "#/components/schemas/McpConnection"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete MCP Server Instance",
        "description": "Delete an MCP server connection instance.",
        "operationId": "deleteMcpConnection",
        "parameters": [
          {
            "name": "connection_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "conn_123abc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MCP server connection deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Connection deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{tenant}/mcp": {
      "post": {
        "summary": "MCP JSON-RPC Endpoint",
        "description": "Single endpoint for all MCP communication using JSON-RPC 2.0 protocol. Supports tools/list, tools/call, resources/list, prompts/list, and other MCP methods.",
        "operationId": "mcpJsonRpc",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "description": "Tenant identifier (e.g., 'pipedrive', 'salesforce', 'hubspot')",
            "schema": {
              "type": "string",
              "example": "pipedrive"
            }
          },
          {
            "name": "Mcp-Session-Id",
            "in": "header",
            "description": "MCP session ID (required after initialization)",
            "schema": {
              "type": "string",
              "example": "session_abc123"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InitializeRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ToolsListRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ToolsCallRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ResourcesListRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ResourcesReadRequest"
                  },
                  {
                    "$ref": "#/components/schemas/PromptsListRequest"
                  },
                  {
                    "$ref": "#/components/schemas/PromptsGetRequest"
                  },
                  {
                    "$ref": "#/components/schemas/PingRequest"
                  },
                  {
                    "$ref": "#/components/schemas/LoggingSetLevelRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CompletionCompleteRequest"
                  },
                  {
                    "$ref": "#/components/schemas/InitializedNotification"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON-RPC 2.0 response",
            "headers": {
              "Mcp-Session-Id": {
                "description": "Session ID (returned by initialize method)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitializeResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ToolsListResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ToolsCallResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ResourcesListResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ResourcesReadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PromptsListResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PromptsGetResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PingResponse"
                    },
                    {
                      "$ref": "#/components/schemas/LoggingSetLevelResponse"
                    },
                    {
                      "$ref": "#/components/schemas/CompletionCompleteResponse"
                    },
                    {
                      "$ref": "#/components/schemas/JsonRpcError"
                    }
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Notification accepted (for methods starting with 'notifications/')"
          }
        }
      }
    },
    "/plants": {
      "get": {
        "summary": "Get all plants",
        "description": "Returns a list of plants in the garden",
        "operationId": "getPlants",
        "responses": {
          "200": {
            "description": "A list of plants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "plants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Plant"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new plant",
        "description": "Creates a new plant in the garden",
        "operationId": "createPlant",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Plant"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Plant created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "get": {
        "summary": "Get a plant by ID",
        "description": "Returns a single plant",
        "operationId": "getPlantById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single plant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a plant",
        "description": "Removes a plant from the garden",
        "operationId": "deletePlant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted successfully"
          }
        }
      }
    },
    "/webhooks": {
      "post": {
        "summary": "Handle webhook",
        "description": "Receives and processes webhook notifications",
        "operationId": "handleWebhook",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processed successfully"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://your-domain.auth.us-east-1.amazoncognito.com/oauth2/token",
            "scopes": {
              "mcp.read": "Read MCP resources",
              "mcp.write": "Write MCP resources",
              "mcp.tools.execute": "Execute MCP tools",
              "mcp.resources.read": "Read MCP resources",
              "mgmt.read": "Read management API",
              "mgmt.write": "Write management API"
            }
          }
        }
      },
      "PAT": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Personal Access Token (Bearer token)"
      }
    },
    "schemas": {
      "InitializeRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method",
          "params"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "init-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "initialize"
            ]
          },
          "params": {
            "type": "object",
            "required": [
              "protocolVersion",
              "capabilities",
              "clientInfo"
            ],
            "properties": {
              "protocolVersion": {
                "type": "string",
                "example": "2025-03-26"
              },
              "capabilities": {
                "type": "object",
                "properties": {
                  "roots": {
                    "type": "object",
                    "properties": {
                      "listChanged": {
                        "type": "boolean"
                      }
                    }
                  },
                  "sampling": {
                    "type": "object"
                  }
                }
              },
              "clientInfo": {
                "type": "object",
                "required": [
                  "name",
                  "version"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "my-mcp-client"
                  },
                  "version": {
                    "type": "string",
                    "example": "1.0.0"
                  }
                }
              }
            }
          }
        }
      },
      "InitializeResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "required": [
              "protocolVersion",
              "capabilities",
              "serverInfo"
            ],
            "properties": {
              "protocolVersion": {
                "type": "string",
                "example": "2025-03-26"
              },
              "capabilities": {
                "type": "object",
                "properties": {
                  "tools": {
                    "type": "object",
                    "properties": {
                      "listChanged": {
                        "type": "boolean"
                      }
                    }
                  },
                  "resources": {
                    "type": "object",
                    "properties": {
                      "subscribe": {
                        "type": "boolean"
                      }
                    }
                  },
                  "prompts": {
                    "type": "object",
                    "properties": {
                      "listChanged": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "serverInfo": {
                "type": "object",
                "required": [
                  "name",
                  "version"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "kambrium-mcp-server"
                  },
                  "version": {
                    "type": "string",
                    "example": "1.0.0"
                  }
                }
              }
            }
          }
        }
      },
      "InitializedNotification": {
        "type": "object",
        "required": [
          "jsonrpc",
          "method"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "method": {
            "type": "string",
            "enum": [
              "notifications/initialized"
            ]
          },
          "params": {
            "type": "object"
          }
        }
      },
      "ToolsListRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "tools-list-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "tools/list"
            ]
          },
          "params": {
            "type": "object",
            "properties": {
              "cursor": {
                "type": "string",
                "description": "Pagination cursor"
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "description": "Number of tools to return"
              }
            }
          }
        }
      },
      "ToolsListResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "required": [
              "tools"
            ],
            "properties": {
              "tools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/McpTool"
                }
              },
              "nextCursor": {
                "type": "string",
                "nullable": true
              }
            }
          }
        }
      },
      "ToolsCallRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method",
          "params"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "tool-call-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "tools/call"
            ]
          },
          "params": {
            "type": "object",
            "required": [
              "name",
              "arguments"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "get_contacts"
              },
              "arguments": {
                "type": "object",
                "example": {
                  "limit": 10
                }
              }
            }
          }
        }
      },
      "ToolsCallResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "properties": {
              "content": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "image",
                        "resource"
                      ]
                    },
                    "text": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "mimeType": {
                      "type": "string"
                    }
                  }
                }
              },
              "isError": {
                "type": "boolean"
              }
            }
          },
          "error": {
            "$ref": "#/components/schemas/JsonRpcErrorObject"
          }
        }
      },
      "ResourcesListRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "resources-list-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "resources/list"
            ]
          },
          "params": {
            "type": "object",
            "properties": {
              "cursor": {
                "type": "string",
                "description": "Pagination cursor"
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "description": "Number of resources to return"
              }
            }
          }
        }
      },
      "ResourcesListResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "required": [
              "resources"
            ],
            "properties": {
              "resources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/McpResource"
                }
              },
              "nextCursor": {
                "type": "string",
                "nullable": true
              }
            }
          }
        }
      },
      "PromptsListRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "prompts-list-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "prompts/list"
            ]
          },
          "params": {
            "type": "object",
            "properties": {
              "cursor": {
                "type": "string",
                "description": "Pagination cursor"
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "description": "Number of prompts to return"
              }
            }
          }
        }
      },
      "PromptsListResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "required": [
              "prompts"
            ],
            "properties": {
              "prompts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/McpPrompt"
                }
              },
              "nextCursor": {
                "type": "string",
                "nullable": true
              }
            }
          }
        }
      },
      "JsonRpcError": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "error"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/JsonRpcErrorObject"
          }
        }
      },
      "JsonRpcErrorObject": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": -32602
          },
          "message": {
            "type": "string",
            "example": "Invalid params"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "AvailableMcpServer": {
        "type": "object",
        "required": [
          "server_type",
          "name",
          "description"
        ],
        "properties": {
          "server_type": {
            "type": "string",
            "example": "pipedrive"
          },
          "name": {
            "type": "string",
            "example": "Pipedrive CRM"
          },
          "description": {
            "type": "string",
            "example": "Connect to Pipedrive CRM for contacts and deals"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tools",
              "resources"
            ]
          }
        }
      },
      "McpTool": {
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "get_contacts"
          },
          "description": {
            "type": "string",
            "example": "Retrieve contacts from CRM"
          },
          "inputSchema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "object"
                ]
              },
              "properties": {
                "type": "object"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "McpResource": {
        "type": "object",
        "required": [
          "uri",
          "name"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "example": "crm://contacts/123"
          },
          "name": {
            "type": "string",
            "example": "Contact: John Doe"
          },
          "description": {
            "type": "string",
            "example": "Contact information for John Doe"
          },
          "mimeType": {
            "type": "string",
            "example": "application/json"
          }
        }
      },
      "McpPrompt": {
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "analyze_sales_data"
          },
          "description": {
            "type": "string",
            "example": "Analyze sales performance data"
          },
          "arguments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "required": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "CreateMcpConnectionRequest": {
        "type": "object",
        "required": [
          "server_type",
          "name"
        ],
        "properties": {
          "server_type": {
            "type": "string",
            "example": "pipedrive"
          },
          "name": {
            "type": "string",
            "example": "My Pipedrive Connection"
          },
          "description": {
            "type": "string",
            "example": "Connection to my Pipedrive CRM"
          },
          "auth_method": {
            "type": "string",
            "enum": [
              "api_key",
              "oauth"
            ],
            "default": "api_key"
          },
          "api_key": {
            "type": "string",
            "example": "pk_abc123"
          },
          "oauth2_client_id": {
            "type": "string",
            "example": "oauth_client_123"
          },
          "oauth2_client_secret": {
            "type": "string",
            "example": "oauth_secret_456"
          },
          "oauth2_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "read",
              "write"
            ]
          },
          "config": {
            "type": "object",
            "example": {
              "domain": "mycompany.pipedrive.com"
            }
          }
        }
      },
      "UpdateMcpConnectionRequest": {
        "type": "object",
        "required": [
          "connection_id"
        ],
        "properties": {
          "connection_id": {
            "type": "string",
            "example": "conn_123abc"
          },
          "name": {
            "type": "string",
            "example": "Updated Connection Name"
          },
          "description": {
            "type": "string",
            "example": "Updated description"
          },
          "api_key": {
            "type": "string",
            "example": "pk_new_key"
          },
          "oauth2_client_secret": {
            "type": "string",
            "example": "new_secret"
          },
          "config": {
            "type": "object"
          }
        }
      },
      "McpConnection": {
        "type": "object",
        "required": [
          "connection_id",
          "server_type",
          "name",
          "status"
        ],
        "properties": {
          "connection_id": {
            "type": "string",
            "example": "conn_123abc"
          },
          "mcp_server_id": {
            "type": "string",
            "example": "mcp_456def"
          },
          "server_type": {
            "type": "string",
            "example": "pipedrive"
          },
          "name": {
            "type": "string",
            "example": "My Pipedrive Connection"
          },
          "description": {
            "type": "string",
            "example": "Connection to Pipedrive CRM"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "error"
            ]
          },
          "auth_method": {
            "type": "string",
            "enum": [
              "api_key",
              "oauth"
            ]
          },
          "oauth2_client_id": {
            "type": "string",
            "example": "oauth_client_123"
          },
          "oauth2_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "config": {
            "type": "object"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResourcesReadRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method",
          "params"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "resource-read-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "resources/read"
            ]
          },
          "params": {
            "type": "object",
            "required": [
              "uri"
            ],
            "properties": {
              "uri": {
                "type": "string",
                "example": "crm://contacts/database"
              }
            }
          }
        }
      },
      "ResourcesReadResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "required": [
              "contents"
            ],
            "properties": {
              "contents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "uri",
                    "mimeType"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string"
                    },
                    "mimeType": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "blob": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PromptsGetRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method",
          "params"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "prompt-get-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "prompts/get"
            ]
          },
          "params": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "analyze_sales_performance"
              },
              "arguments": {
                "type": "object"
              }
            }
          }
        }
      },
      "PromptsGetResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "required": [
              "messages"
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "messages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "role",
                    "content"
                  ],
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "assistant",
                        "system"
                      ]
                    },
                    "content": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "text",
                            "image",
                            "resource"
                          ]
                        },
                        "text": {
                          "type": "string"
                        },
                        "data": {
                          "type": "string"
                        },
                        "mimeType": {
                          "type": "string"
                        },
                        "uri": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PingRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "ping-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "ping"
            ]
          }
        }
      },
      "PingResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "example": {}
          }
        }
      },
      "LoggingSetLevelRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method",
          "params"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "logging-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "logging/setLevel"
            ]
          },
          "params": {
            "type": "object",
            "required": [
              "level"
            ],
            "properties": {
              "level": {
                "type": "string",
                "enum": [
                  "debug",
                  "info",
                  "notice",
                  "warning",
                  "error",
                  "critical",
                  "alert",
                  "emergency"
                ]
              }
            }
          }
        }
      },
      "LoggingSetLevelResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "example": {}
          }
        }
      },
      "CompletionCompleteRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "method",
          "params"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string",
            "example": "completion-123"
          },
          "method": {
            "type": "string",
            "enum": [
              "completion/complete"
            ]
          },
          "params": {
            "type": "object",
            "required": [
              "ref",
              "argument"
            ],
            "properties": {
              "ref": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "ref/tool",
                      "ref/prompt",
                      "ref/resource"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "uri": {
                    "type": "string"
                  }
                }
              },
              "argument": {
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "CompletionCompleteResponse": {
        "type": "object",
        "required": [
          "jsonrpc",
          "id",
          "result"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "id": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "required": [
              "completion"
            ],
            "properties": {
              "completion": {
                "type": "object",
                "required": [
                  "values",
                  "total",
                  "hasMore"
                ],
                "properties": {
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "total": {
                    "type": "integer"
                  },
                  "hasMore": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "Plant": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Aloe Vera"
          },
          "type": {
            "type": "string",
            "example": "succulent"
          },
          "wateringSchedule": {
            "type": "string",
            "example": "weekly"
          }
        }
      }
    }
  }
}